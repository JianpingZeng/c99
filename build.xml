<?xml version="1.0" encoding="UTF-8"?>
<project name="c99" default="all">
  
  
  <property file="c99.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.apk"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.ane"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  
  <!-- Global Libraries -->
  
  
  <!-- Application Server Libraries -->
  
  <!-- Modules -->
  
  
  <!-- Module c99j -->
  
  <dirname property="module.c99j.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.c99j" value="${compiler.args}"/>
  
  <property name="c99j.output.dir" value="${module.c99j.basedir}/java/out/production/c99j"/>
  <property name="c99j.testoutput.dir" value="${module.c99j.basedir}/java/out/test/c99j"/>
  
  <path id="c99j.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="c99j.module.production.classpath">
    <pathelement location="${basedir}/java/libs/junit-4.11.jar"/>
    <pathelement location="${basedir}/java/libs/hamcrest-core-1.3.jar"/>
  </path>
  
  <path id="c99j.runtime.production.module.classpath">
    <pathelement location="${c99j.output.dir}"/>
    <pathelement location="${basedir}/java/libs/junit-4.11.jar"/>
    <pathelement location="${basedir}/java/libs/hamcrest-core-1.3.jar"/>
  </path>
  
  <path id="c99j.module.classpath">
    <pathelement location="${c99j.output.dir}"/>
    <pathelement location="${basedir}/java/libs/junit-4.11.jar"/>
    <pathelement location="${basedir}/java/libs/hamcrest-core-1.3.jar"/>
  </path>
  
  <path id="c99j.runtime.module.classpath">
    <pathelement location="${c99j.testoutput.dir}"/>
    <pathelement location="${c99j.output.dir}"/>
    <pathelement location="${basedir}/java/libs/junit-4.11.jar"/>
    <pathelement location="${basedir}/java/libs/hamcrest-core-1.3.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.c99j">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.c99j">
    <patternset refid="excluded.from.module.c99j"/>
  </patternset>
  
  <path id="c99j.module.sourcepath">
    <dirset dir="${module.c99j.basedir}/java/c99j">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="c99j.module.test.sourcepath">
    <dirset dir="${module.c99j.basedir}/java/c99j">
      <include name="test"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.c99j" depends="compile.module.c99j.production,compile.module.c99j.tests" description="Compile module c99j"/>
  
  <target name="compile.module.c99j.production" description="Compile module c99j; production classes">
    <mkdir dir="${c99j.output.dir}"/>
    <javac destdir="${c99j.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.c99j}"/>
      <bootclasspath refid="c99j.module.bootclasspath"/>
      <classpath refid="c99j.module.production.classpath"/>
      <src refid="c99j.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.c99j"/>
    </javac>
    
    <copy todir="${c99j.output.dir}">
      <fileset dir="${module.c99j.basedir}/java/c99j/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.c99j.tests" depends="compile.module.c99j.production" description="compile module c99j; test classes" unless="skip.tests">
    <mkdir dir="${c99j.testoutput.dir}"/>
    <javac destdir="${c99j.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.c99j}"/>
      <bootclasspath refid="c99j.module.bootclasspath"/>
      <classpath refid="c99j.module.classpath"/>
      <src refid="c99j.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.c99j"/>
    </javac>
    
    <copy todir="${c99j.testoutput.dir}">
      <fileset dir="${module.c99j.basedir}/java/c99j/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.c99j" description="cleanup module">
    <delete dir="${c99j.output.dir}"/>
    <delete dir="${c99j.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.c99j" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.c99j" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.c99j:jar" value="${basedir}/java/out/artifacts/c99j_jar"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.c99j.jar" value="${artifacts.temp.dir}/c99j.jar"/>
  </target>
  
  <target name="artifact.c99j:jar" depends="init.artifacts, compile.module.c99j" description="Build &#39;c99j:jar&#39; artifact">
    <property name="artifact.temp.output.c99j:jar" value="${artifacts.temp.dir}/c99j_jar"/>
    <mkdir dir="${artifact.temp.output.c99j:jar}"/>
    <jar destfile="${temp.jar.path.c99j.jar}" duplicate="preserve" filesetmanifest="merge">
      <zipfileset dir="${c99j.output.dir}"/>
    </jar>
    <copy file="${temp.jar.path.c99j.jar}" tofile="${artifact.temp.output.c99j:jar}/c99j.jar"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.c99j:jar" description="Build all artifacts">
    <mkdir dir="${artifact.output.c99j:jar}"/>
    <copy todir="${artifact.output.c99j:jar}">
      <fileset dir="${artifact.temp.output.c99j:jar}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>
